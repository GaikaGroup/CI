// Test for splitTextForTTS function

function splitTextForTTS(text, maxChunkLength = 1000) {
  if (text.length <= maxChunkLength) {
    return [text];
  }

  const chunks = [];
  
  // Split by sentences (including Russian and English punctuation)
  const sentenceRegex = /[^.!?]+[.!?]+(?:\s+|$)/g;
  const sentences = text.match(sentenceRegex) || [text];
  
  let currentChunk = '';

  for (const sentence of sentences) {
    const trimmedSentence = sentence.trim();
    
    // If single sentence is longer than max, include it anyway
    if (trimmedSentence.length > maxChunkLength) {
      if (currentChunk) {
        chunks.push(currentChunk.trim());
        currentChunk = '';
      }
      chunks.push(trimmedSentence);
      continue;
    }
    
    const potentialLength = currentChunk.length + (currentChunk ? 1 : 0) + trimmedSentence.length;
    
    if (potentialLength > maxChunkLength && currentChunk) {
      chunks.push(currentChunk.trim());
      currentChunk = trimmedSentence;
    } else {
      currentChunk += (currentChunk ? ' ' : '') + trimmedSentence;
    }
  }

  if (currentChunk) {
    chunks.push(currentChunk.trim());
  }

  return chunks.filter(chunk => chunk.length > 0);
}

// Test cases
console.log('=== Test 1: Short text (no splitting) ===');
const shortText = 'Это короткий текст. Он не требует разбиения.';
const result1 = splitTextForTTS(shortText, 1000);
console.log('Input length:', shortText.length);
console.log('Chunks:', result1.length);
console.log('Result:', result1);
console.log('');

console.log('=== Test 2: Long text (multiple sentences) ===');
const longText = `Документ — это вакансия инженера по речевому искусственному интеллекту. Нужен ведущий инженер, который возглавит разработку голосового агента реального времени. Продукт — тренер устной речи на основе искусственного интеллекта. Обязателен свободный английский, ежедневная коммуникация на нём. Проектирование и реализация голосового агента реального времени: потоковое распознавание и синтез речи. Развитие набора инструментов для машинного обучения: обучение и выкладка моделей. Серверная часть по необходимости: фреймворки на языке с динамической типизацией. Прикладные решения вокруг больших языковых моделей: расширение контекста внешними знаниями.`;
const result2 = splitTextForTTS(longText, 1000);
console.log('Input length:', longText.length);
console.log('Chunks:', result2.length);
result2.forEach((chunk, i) => {
  console.log(`Chunk ${i + 1} (${chunk.length} chars):`, chunk.substring(0, 80) + '...');
});
console.log('');

console.log('=== Test 3: Very long single sentence ===');
const veryLongSentence = 'Это очень длинное предложение, которое содержит много слов и символов, и оно специально создано для того чтобы проверить как система обрабатывает предложения которые превышают максимальную длину chunk и должны быть включены целиком даже если они длиннее лимита потому что разрывать предложение посередине нельзя так как это нарушит естественность речи и сделает озвучивание непонятным для слушателя поэтому такие длинные предложения должны идти отдельным chunk даже если они превышают установленный лимит в тысячу символов что является разумным компромиссом между скоростью обработки и качеством озвучивания текста для пользователя который слушает ответ системы в режиме голосового взаимодействия с искусственным интеллектом который анализирует документы и отвечает на вопросы пользователя используя технологии распознавания и синтеза речи а также большие языковые модели для генерации осмысленных и полезных ответов на основе содержимого загруженных документов включая PDF файлы с текстовой информацией о вакансиях работе проектах и других важных темах которые интересуют пользователя в контексте его профессиональной деятельности и карьерного развития.';
const result3 = splitTextForTTS(veryLongSentence, 1000);
console.log('Input length:', veryLongSentence.length);
console.log('Chunks:', result3.length);
result3.forEach((chunk, i) => {
  console.log(`Chunk ${i + 1} (${chunk.length} chars)`);
});
console.log('');

console.log('=== Test 4: Real vacancy text ===');
const vacancyText = `Вот краткий разбор вакансии инженера по речевому искусственному интеллекту.Суть роли - Нужен ведущий инженер, который возглавит разработку голосового агента реального времени и внутреннего набора инструментов для машинного обучения. Продукт — тренер устной речи на основе искусственного интеллекта, который слушает онлайн‑звонки и помогает улучшать английский. - Обязателен свободный английский, ежедневная коммуникация на нём.Чем предстоит заниматься - Проектирование и реализация голосового агента реального времени: потоковое распознавание и синтез речи, детектор активности голоса, разделение говорящих, автоматы состояний, управление сессиями, обработка сбоев, контроль качества обслуживания и бюджетов задержек. - Развитие набора инструментов для машинного обучения: обучение и выкладка моделей распознавания и синтеза речи, детекции голоса, идентификации и разделения говорящих, векторных представлений и метрик качества; цифровая обработка сигналов; кодирование и декодирование медиа; пакетная и потоковая инференция; квантизация; перевод моделей в унифицированные форматы и оптимизация под графические ускорители; детерминированные конвейеры и воспроизводимость. - Серверная часть по необходимости: фреймворки на языке с динамической типизацией, интерфейсы на основе ресурсов, описание контрактов, работа с реляционными базами данных и миграциями, интеграции с внешними сервисами. - Прикладные решения вокруг больших языковых моделей: расширение контекста внешними знаниями, вызов инструментов и функций, маршрутизация запросов и ответов, безопасность и защитные ограничения, долговременная память, сплит‑тестирование, баланс качества и стоимости. - Проектирование надёжных систем реального времени: идемпотентность, обратное давление, кэширование и укрупнение, очереди и планировщики, компромиссы между пропускной способностью и задержкой. - Потоки данных для моделей: сбор, очистка, анонимизация, синтетические данные, офлайн‑ и онлайн‑оценка, регрессионные тесты качества. - Наблюдаемость и целевые уровни обслуживания: мониторинг ошибок, метрик и логов, трассировка, оповещения, быстрый поиск причин инцидентов и их исправление. - Инфраструктура и выкладки: контейнеризация, автоматизация сборки и доставки, облачные платформы, инференс на графических ускорителях, управление секретами, откаты, поэтапные выкладки. - Качество и простота: единые рабочие пространства, статический анализ и проверка типов, строгая валидация данных, единый стиль кода, внутренние утилиты и интеграционные инструменты, документация, обзор кода, спецификации интерфейсов, принцип «ничего лишнего».Что ожидают - Высокая скорость и регулярная поставка в прод. - Прямая ежедневная работа с руководством компании. - Самостоятельность и владение задачами сквозь весь цикл.Формат работы - Полностью удалённо и асинхронно, любая часовая зона. - Оформление через международного провайдера практически в любой стране. - Не рассматривают кандидатов, находящихся в рф. - Возможна поддержка с переездом в сша через рабочую визу для высококвалифицированных специалистов. - Один‑два совместных выездных сборов команды в год (последний — на Бали).Кого особенно ценят - Опыт в крупных технологических компаниях, венчурных стартапах, отечественных лидерах рынка. - Не приветствуется бэкграунд из аутсорс‑галер, классического консалтинга, индустрий азартных игр и распределённых реестров. - Сильная олимпиадная или соревновательная база, участие в платформах по анализу данных и алгоритмам. - Вклад в открытые проекты с заметной активностью, техноблог или канал. - Живые ссылки на приложения и продукты, за которые вы отвечали. - Любой опыт предпринимательства, вкус и практический дизайн, тёплые рекомендации от коллег и руководителей.Кому подойдёт - Инженеру, который уверенно чувствует себя на стыке аудио в реальном времени, машинного обучения и серверной разработки, умеет держать низкие задержки и высокую надёжность, и готов быстро доставлять результат в прод.Как усилить отклик - Показать проекты с реальным временем и строгими ограничениями по задержке. - Приложить демо распознавания и синтеза речи, кейсы с детектором активности и разделением говорящих. - Описать метрики качества, воспроизводимость и опыт оптимизации моделей под графические ускорители. - Дать ссылки на продукты, статьи, вклад в открытые репозитории и рекомендации.Если нужно, могу помочь составить резюме под эту вакансию или подготовить список вопросов для собеседования.`;

const result4 = splitTextForTTS(vacancyText, 1000);
console.log('Input length:', vacancyText.length);
console.log('Chunks:', result4.length);
console.log('');
result4.forEach((chunk, i) => {
  console.log(`\n--- Chunk ${i + 1} (${chunk.length} chars) ---`);
  console.log(chunk);
  console.log('---');
});
console.log('');

console.log('=== Summary ===');
console.log('✅ Short texts remain as single chunk');
console.log('✅ Long texts split by sentences');
console.log('✅ Very long sentences kept intact (not broken mid-sentence)');
console.log('✅ All chunks respect sentence boundaries');
console.log(`\n📊 Vacancy text: ${vacancyText.length} chars → ${result4.length} chunks`);
console.log(`📊 Average chunk size: ${Math.round(vacancyText.length / result4.length)} chars`);
